/*
 * Copyright (c) 2025 miketronic
 * SPDX-License-Identifier: MIT
 * ataraxia
 */

/*
 * Includes Cem's zmk-rgbled-widget - https://github.com/caksoylar/zmk-rgbled-widget
 * &ind_bat  // indicate battery level
 * &ind_con  // indicate connectivity status
 *
 * List of behvaiors here > https://github.com/zmkfirmware/zmk/tree/main/app/dts/behaviors
 *
 *
 * #undef ZMK_BEHAVIORS_KEEP_ALL
 * #define ZMK_BEHAVIORS_KEEP_BT
 * #define ZMK_BEHAVIORS_KEEP_KP
 * #define ZMK_BEHAVIORS_KEEP_LT
 * #define ZMK_BEHAVIORS_KEEP_MKP
 * #define ZMK_BEHAVIORS_KEEP_MMV
 * #define ZMK_BEHAVIORS_KEEP_MSC
 * #define ZMK_BEHAVIORS_KEEP_MT
 * #define ZMK_BEHAVIORS_KEEP_NONE
 * #define ZMK_BEHAVIORS_KEEP_SK
 *
 *
 */




#define ZMK_POINTING_DEFAULT_MOVE_VAL 500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

#include <behaviors.dtsi>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define ALPHA       0
#define SYMBOL      1
#define NUMBER      2
#define FUNCTION    3
#define MOUSE       4

#define ESCFN  &lt FUNCTION ESC
#define NTAB   &lt NUMBER TAB
#define SYMZ   &lt SYMBOL Z
#define MSEA   &lt MOUSE A

#define LSHF    &kp LSHFT
#define RSHF    &kp RSHFT
#define COMM    &kp COMMA
#define GRV     &kp GRAVE
#define UND     &kp UNDER

#define MM_U &mmv MOVE_UP
#define MM_D &mmv MOVE_DOWN
#define MM_R &mmv MOVE_RIGHT
#define MM_L &mmv MOVE_LEFT

#define MS_U &msc SCRL_UP
#define MS_D &msc SCRL_DOWN
#define MS_R &msc SCRL_RIGHT
#define MS_L &msc SCRL_LEFT

#define MCK  &mkp MCLK  
#define RCK  &mkp RCLK  
#define LCK  &mkp LCLK 

&mmv_input_listener {
        standard {
            layers = <MOUSE>;
            input-processors = <&zip_xy_scaler 3 1>;
        };
};

&mmv {
    x-input-code = <INPUT_REL_X>;
    y-input-code = <INPUT_REL_Y>;
    time-to-max-speed-ms = <200>;
    acceleration-exponent = <1>;
};

&mt {
    tapping-term-ms = <160>;
};

&lt {
    tapping-term-ms = <150>;
};


/ {

    leds {
        compatible = "gpio-leds";
        user_led: led_0 {
            gpios = <&gpio0 15 GPIO_ACTIVE_HIGH>;
            label = "User LED";
        };
    };

    aliases {
        indicator-led = &user_led;
    };

    combos {

        compatible = "zmk,combos";
        combo_bootloader {
            timeout-ms = <100>;
            key-positions = <0 11>;
            bindings = <&bootloader>;
        };
    };

    behaviors {

        bkt: tap_dance_bracket {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        brc: tap_dance_brace {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };

        par: tap_dance_paren {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };

        thn: tap_dance_then {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LT>, <&kp GT>;
        };

        hrm: homerow_mods {
           compatible = "zmk,behavior-hold-tap";
           #binding-cells = <2>;
           tapping-term-ms = <250>;
           quick-tap-ms = <0>;
           flavor = "tap-preferred";
           bindings = <&kp>, <&kp>;

        };

    };



    keymap {
        compatible = "zmk,keymap";

       ALPHA_layer {
            display-name = "ATARAXIA";  
            bindings = <
                ESCFN   &kp Q   &kp W   &kp E   &kp R   &kp T   &kp Y   &kp U   &kp I   &kp O   &kp P    &kp BSPC
                NTAB    MSEA    &kp S   &kp D   &kp F   &kp G   &kp H   &kp J   &kp K   &kp L   &kp SEMI &kp QUOT
                LSHF    SYMZ    &kp X   &kp C   &kp V   &kp B   &kp N   &kp M   COMM    &kp DOT &kp FSLH &kp CAPS
                                &kp LCTRL &kp LALT &kp SPACE  &kp RET   &kp RGUI &kp DEL
            >;
        };

        SYMBOL_layer {
            display-name = "SYMBOL";  
            bindings = <
                GRV &kp EXCL  &kp AT  &kp HASH  &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp STAR &kp PIPE &none &none
                GRV &kp TILDE UND     &kp EQUAL &none    &bkt  &brc  &par      &thn   &kp BSLH &none &none
                LSHF  &none &kp PLUS  &kp MINUS &none    &none &none &kp COLON &trans &kp SEMI &kp RSHF &none
                                 &kp LCTRL &kp LALT &kp SPACE  &kp RET   &kp RGUI &kp DEL
            >;
        };

        NUMBER_layer {
            display-name = "NUMBER";  
            bindings = <
                &none &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &none
                &none &none  &none  &none  &none  &none  &none  &kp N4 &kp N5 &kp N6 &none  &none
                LSHF  &none  &none  &none  &none  &none  c&none &kp N1 &kp N2 &kp N3 &none  RSHF 
                                 &kp LCTRL &kp LALT &kp SPACE  &kp RET   &kp RGUI &kp DEL
            >;
        };

        FUNCTION_layer {
            display-name = "FUNCTION";  
            bindings = <
                &none  &none  &none  &none  &none  &none  &none  &none  &none &none &none &bt BT_CLR
                &none  &none  &none  &none  &none  &none  &none  &none  &none &none &none &none
                &bt BT_NXT  &bt BT_PRV  &none  &none  &none  &none  &none  &none  &none &none &studio_unlock &bootloader
                                 &kp LCTRL &kp LALT &kp SPACE  &kp RET   &kp RGUI &kp DEL
            >;
        };

        MOUSE_layer {
            display-name = "MOUSE";  
            bindings = <
                &none  &none  &none  &none  &none  &none  &none  MS_U   MM_U   MS_D  &none &none
                &none  &none  &none  &none  &none  &none  &none  MM_L   MM_D   MM_R  &none &none
                &none  &none  &none  &none  &none  &none  &none  &none  &none  &none &none &none  
                                    MCK  RCK  LCK                        MCK  RCK  LCK
            >;
        };

        extra1 {
            status = "reserved";
        };

        extra2 {
            status = "reserved";
        };

        extra3 {
            status = "reserved";
        };

        extra4 {
            status = "reserved";
        };

    };
};
